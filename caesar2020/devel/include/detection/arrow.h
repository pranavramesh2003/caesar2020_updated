// Generated by gencpp from file detection/arrow.msg
// DO NOT EDIT!


#ifndef DETECTION_MESSAGE_ARROW_H
#define DETECTION_MESSAGE_ARROW_H

#include <ros/service_traits.h>


#include <detection/arrowRequest.h>
#include <detection/arrowResponse.h>


namespace detection
{

struct arrow
{

typedef arrowRequest Request;
typedef arrowResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct arrow
} // namespace detection


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::detection::arrow > {
  static const char* value()
  {
    return "c22f2a1ed8654a0b365f1bb3f7ff2c0f";
  }

  static const char* value(const ::detection::arrow&) { return value(); }
};

template<>
struct DataType< ::detection::arrow > {
  static const char* value()
  {
    return "detection/arrow";
  }

  static const char* value(const ::detection::arrow&) { return value(); }
};


// service_traits::MD5Sum< ::detection::arrowRequest> should match
// service_traits::MD5Sum< ::detection::arrow >
template<>
struct MD5Sum< ::detection::arrowRequest>
{
  static const char* value()
  {
    return MD5Sum< ::detection::arrow >::value();
  }
  static const char* value(const ::detection::arrowRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::detection::arrowRequest> should match
// service_traits::DataType< ::detection::arrow >
template<>
struct DataType< ::detection::arrowRequest>
{
  static const char* value()
  {
    return DataType< ::detection::arrow >::value();
  }
  static const char* value(const ::detection::arrowRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::detection::arrowResponse> should match
// service_traits::MD5Sum< ::detection::arrow >
template<>
struct MD5Sum< ::detection::arrowResponse>
{
  static const char* value()
  {
    return MD5Sum< ::detection::arrow >::value();
  }
  static const char* value(const ::detection::arrowResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::detection::arrowResponse> should match
// service_traits::DataType< ::detection::arrow >
template<>
struct DataType< ::detection::arrowResponse>
{
  static const char* value()
  {
    return DataType< ::detection::arrow >::value();
  }
  static const char* value(const ::detection::arrowResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DETECTION_MESSAGE_ARROW_H
