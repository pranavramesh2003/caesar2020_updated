// Generated by gencpp from file traversal/rotate.msg
// DO NOT EDIT!


#ifndef TRAVERSAL_MESSAGE_ROTATE_H
#define TRAVERSAL_MESSAGE_ROTATE_H

#include <ros/service_traits.h>


#include <traversal/rotateRequest.h>
#include <traversal/rotateResponse.h>


namespace traversal
{

struct rotate
{

typedef rotateRequest Request;
typedef rotateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct rotate
} // namespace traversal


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::traversal::rotate > {
  static const char* value()
  {
    return "68ab4445b744dfee815876481a389c04";
  }

  static const char* value(const ::traversal::rotate&) { return value(); }
};

template<>
struct DataType< ::traversal::rotate > {
  static const char* value()
  {
    return "traversal/rotate";
  }

  static const char* value(const ::traversal::rotate&) { return value(); }
};


// service_traits::MD5Sum< ::traversal::rotateRequest> should match
// service_traits::MD5Sum< ::traversal::rotate >
template<>
struct MD5Sum< ::traversal::rotateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::traversal::rotate >::value();
  }
  static const char* value(const ::traversal::rotateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::traversal::rotateRequest> should match
// service_traits::DataType< ::traversal::rotate >
template<>
struct DataType< ::traversal::rotateRequest>
{
  static const char* value()
  {
    return DataType< ::traversal::rotate >::value();
  }
  static const char* value(const ::traversal::rotateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::traversal::rotateResponse> should match
// service_traits::MD5Sum< ::traversal::rotate >
template<>
struct MD5Sum< ::traversal::rotateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::traversal::rotate >::value();
  }
  static const char* value(const ::traversal::rotateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::traversal::rotateResponse> should match
// service_traits::DataType< ::traversal::rotate >
template<>
struct DataType< ::traversal::rotateResponse>
{
  static const char* value()
  {
    return DataType< ::traversal::rotate >::value();
  }
  static const char* value(const ::traversal::rotateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TRAVERSAL_MESSAGE_ROTATE_H
